
img {
    backface-visibility: hidden;
}

.layers {
    position: relative;
    width: 560px;

    display: block;
    margin-left: auto;
    margin-right: auto;
}

.layer {
    position: absolute;
}

.zoom-item {
    border-width: 3px;

    * {
        opacity: 0;
        transition: opacity 1s ease-in-out, transform 1s ease-in-out 0.2s;
    }

    h2, h3 {
        opacity: 1;
    }

    h2 {
        transform: scale(3.4);
        transform-origin: -7% -160%;
    }

    h3 {
        transform: scale(3);
        transform-origin: 50% -250%;
    }
}

.zoom-parent() {
    .zoom-overview {
        opacity: 1;
        z-index: -1;
    }

    .zoom-item {
        opacity: 1;
        cursor: pointer;
    }
}

.zoom-child() {
    .zoom-overview {
        opacity: 0.3;
    }

    .zoom-item {
        border-width: 1px;

        &:not(.active) {
            opacity: 0.3;
        }

        * {
            opacity: 1;
        }

        h2, h3 {
            transform: scale(1);
        }
    }
}

.impress-group-zoom-test {
    .zoom-parent;
}

.impress-group-zoom-test-child {
    .zoom-child;
}


<<<<<<< HEAD:app/styles/sample.less
@layer-x: 480px;
@layer-y: 100px;
@layer-z: 0px;
@layer-z-margin: 80px;
@layer-rotate-x: 70deg;
@layer-rotate-y: 45deg;

.layer {
    transform: rotateY(@layer-rotate-y) rotateX(@layer-rotate-x) translateZ(@layer-z) translateY(@layer-y);
    transition: transform 1s ease;
}

.layer-loop(@i) when (@i > 0) {
    .layer-loop(@i - 1);

    #layer@{i} {
        transform: rotateY(@layer-rotate-y) rotateX(@layer-rotate-x) translateZ(@layer-z-margin * @i + @layer-z) translateY(@layer-y);
        transition-delay: 0.8s;
    }
}

.layer-loop2(@i) when (@i > 0) {
    .layer-loop2(@i - 1);

    #layer@{i} {
        opacity: 1;
        transform: rotateY(@layer-rotate-y) rotateX(@layer-rotate-x) translateX((@i - 2) * @layer-x) translateZ(@layer-z) translateY(@layer-y);
    }
}

.present {
    .layer-loop(3);
}

.impress-on-layers-detail {
    .layer-loop2(3);
=======
$layer-x: 480px;
$layer-y: -135px;
$layer-z: 350px;
$layer-z-margin: 80px;
$layer-rotate-x: 70deg;
$layer-rotate-y: 45deg;

.layer {
    transform: rotateY($layer-rotate-y) rotateX($layer-rotate-x) translateZ($layer-z) translateY($layer-y);
    transition: transform 1s ease;
}

.present {
    @for $i from 1 through 3 {
        #layer#{$i} {
            transform: rotateY($layer-rotate-y) rotateX($layer-rotate-x) translateZ($layer-z-margin * $i + $layer-z) translateY($layer-y);
            transition-delay: 0.8s;
        }
    }
}

.impress-on-layers-detail {
    @for $i from 1 through 3 {
        #layer#{$i} {
            opacity: 1;
            transform: rotateY($layer-rotate-y) rotateX($layer-rotate-x) translateX(($i - 2) * $layer-x) translateZ($layer-z) translateY($layer-y);
        }
    }
}
<<<<<<< HEAD:app/styles/sample.less

.impress-group-board {
    .layer {
        opacity: 0;
    }
}

.impress-on-layers-detail {
    .board {
        opacity: 0;
    }
>>>>>>> Replace sample images to sheet images:app/styles/main.scss
}

.impress-group-layers-test {
    .layers-3d {
        opacity: 1;
    }
}

.impress-group-overview {
    .overview-item {
        opacity: 1;
    }
}

.impress-group-hw {
    #board-front {
        transform: rotateY(180deg);
    }

    #board-back {
        transform: rotateY(0deg);
    }
}

#board-front {
    transform: rotateY(0deg);
    transition: transform 1s ease;
}

#board-back {
    transform: rotateY(-180deg);
    transition: transform 1s ease;
}
=======
>>>>>>> Minor change in styles:app/styles/main.scss
